-- osm layer
create table planet_osm_nodes(
	id bigserial primary key not null,
	tags text[],
	geom geometry(POINT)
);

create table planet_osm_ways(
	id bigserial primary key not null,
	nodes bigint[],
	tags text[],
	geom geometry(LINESTRING)
);

-- segment layer
create table sm_nodes(
	id bigserial primary key not null,
	osm_node bigint references planet_osm_nodes(id),
	geom geometry(POINT)
);
create table sm_links(
	id bigserial primary key not null,
	way_id bigint references planet_osm_ways(id),
	osm_start_node bigint references planet_osm_nodes(id),
	osm_end_node bigint references planet_osm_nodes(id),
	geom geometry(LINESTRING)
);
create table sm_segments(
	id bigserial primary key not null,
	link_id bigint references sm_links(id),
	start_node bigint references sm_nodes(id),
	end_node bigint references sm_nodes(id),
	inLineWithLink boolean,
	geom geometry(LINESTRING)
);

-- dictionary
create table sm_dictionary(
	id bigserial primary key not null,
	name text,
	description text,
	key text[],
	datatypes text[],
	required boolean[]
);

-- properties
create table sm_node_properties(
	id bigserial primary key not null,
	node_id bigint references sm_nodes(id),
	tags text[],
	description text,
	dictionary_id bigint references sm_dictionary(id)
);
create table sm_segment_properties(
	id bigserial primary key not null,
	segment_id bigint references sm_segments(id),
	tags text[],
	description text,
	dictionary_id bigint references sm_dictionary(id)
);
create table sm_link_properties(
	id bigserial primary key not null,
	link_id bigint references sm_links(id),
	tags text[],
	description text,
	dictionary_id bigint references sm_dictionary(id)
);

-- osm layer inserts
	
-- segment layer inserts
insert into sm_nodes (osm_node,geom) values
    (NULL,ST_GeomFromText('point(2 2)')),
	(NULL,ST_GeomFromText('point(2 6)')),
	(NULL,ST_GeomFromText('point(2 18)')),
	(NULL,ST_GeomFromText('point(5 6)')),
	(NULL,ST_GeomFromText('point(9 6)')),
	(NULL,ST_GeomFromText('point(9 12)')),
	(NULL,ST_GeomFromText('point(11 6)')),
	(NULL,ST_GeomFromText('point(15 6)')),
	(NULL,ST_GeomFromText('point(17 6)'));

insert into sm_links (way_id,osm_start_node,osm_end_node,geom) values
	(NULL,NULL,NULL,ST_GeomFromText('linestring(2 2,2 6,2 18)')),
	(NULL,NULL,NULL,ST_GeomFromText('linestring(2 6,17 6)')),
	(NULL,NULL,NULL,ST_GeomFromText('linestring(9 6,9 12)'));

insert into	sm_segments (link_id,start_node,end_node,inLineWithLink,geom) values
	(1,1,2,true,ST_GeomFromText('linestring(2 2,2 6)')),
	(1,2,3,true,ST_GeomFromText('linestring(2 6,2 18)')),
	(2,2,5,true,ST_GeomFromText('linestring(2 6,9 6)')),
	(3,5,6,true,ST_GeomFromText('linestring(9 6,9 12)')),
	(2,5,9,true,ST_GeomFromText('linestring(9 6,17 6)')),
	(2,4,7,true,ST_GeomFromText('linestring(5 6,11 6)')),
	(2,2,8,true,ST_GeomFromText('linestring(2 6,15 6)')),
	(3,5,6,true,ST_GeomFromText('linestring(9 6,9 12)')),
	(1,1,3,true,ST_GeomFromText('linestring(2 2,2 18)'));
	
-- dictionary inserts
insert into sm_dictionary (name,description,key,datatypes,required) values
	('Road category','Road category','{"Category"}','{"String"}','{FALSE}'),
	('Traffic lights','Traffic lights','{"Intelligent","With right turn","With pedestrians","With cyclists"}','{"Boolean","Boolean","Boolean","Boolean"}','{FALSE,FALSE,FALSE,FALSE}'),
	('D42','D42','{"D42"}','{"String"}','{FALSE}'),
	('Transverse vehicles','Transverse vehicles','{"hour","day"}','{"String","String"}','{FALSE,FALSE}');
	
-- properties inserts
insert into sm_node_properties (node_id,tags,description,dictionary_id) values
	(2,'{"FALSE","FALSE","FALSE","FALSE"}','Traffic lights',2);

insert into sm_link_properties (link_id,tags,description,dictionary_id) values
	(1,'{"G"}','Road category',1),
	(2,'{"D"}','Road category',1),
	(3,'{"D"}','Road category',1);
		
insert into sm_segment_properties (segment_id,tags,description,dictionary_id) values
	(1,'{"G"}','Road category',1),
	(2,'{"G"}','Road category',1),
	(3,'{"D"}','Road category',1),
	(4,'{"D"}','Road category',1),
	(5,'{"D"}','Road category',1),
	(6,'{"60","1000"}','Transverse vehicles',4),
	(7,'{"D42"}','D42',3),
	(8,'{"D42"}','D42',3),	
	(9,'{"D42"}','D42',3);
